#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E         &kp R                          &kp T                                                 &kp Y        &kp U  &kp I        &kp O       &kp P
&kp A             &kp S             &kp D         &kp F                          &kp G        &lt 6 ESC                 &kp ESC        &kp H        &kp J  &kp K        &kp L       &kp MINUS
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V                          &kp B        &kp LC(LA(SPACE))         &trans         &kp N        &kp M  &lt 5 COMMA  &kp PERIOD  &mt RIGHT_SHIFT QMARK
&kp LEFT_SHIFT    &kp LEFT_CONTROL  &kp LEFT_ALT  &lt_to_layer_0 2 LEFT_COMMAND  &lt 3 SPACE  &lt_to_layer_0 1 TAB      &kp BACKSPACE  &lt 7 ENTER                                  &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp C_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE      &kp C_NEXT            &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                          &trans
            >;
        };

        SYMBOL {
            bindings = <
&trans          &trans            &trans        &trans            &trans                                    &kp EXCLAMATION        &kp HASH   &kp DOLLAR     &kp AMPERSAND  &kp CARET
&trans          &trans            &trans        &trans            &trans  &trans      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT    &kp SEMICOLON  &kp AT_SIGN    &kp GRAVE
&kp LEFT_SHIFT  &trans            &trans        &trans            &trans  &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COMMA  &kp PERIOD     &kp SLASH      &kp NON_US_BACKSLASH
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans  &trans      &kp BACKSPACE         &kp ENTER                                                       &kp MINUS
            >;
        };

        NUM {
            bindings = <
&trans          &trans  &trans  &trans  &trans                             &kp MINUS     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
&trans          &trans  &trans  &trans  &trans  &trans      &kp INT_YEN    &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans      &kp PERCENT    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
&trans          &trans  &trans  &trans  &trans  &trans      &kp BACKSPACE  &kp ENTER                                               &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        ARROW {
            bindings = <
&trans          &trans            &trans        &trans            &trans                      &trans          &trans          &trans        &trans           &trans
&trans          &trans            &trans        &trans            &trans  &trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans          &trans            &trans        &trans            &trans  &trans      &trans  &trans          &trans          &trans        &trans           &trans
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans  &trans      &trans  &trans                                                         &trans
            >;
        };
    };
};
